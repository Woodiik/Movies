{"version":3,"file":"static/js/321.d74615a6.chunk.js","mappings":"uPAGaA,EAAOC,EAAAA,GAAAA,KAAH,iGAMJC,EAAQD,EAAAA,GAAAA,MAAH,iKASLE,EAAOF,EAAAA,GAAAA,GAAH,iIAOJG,EAAWH,EAAAA,GAAAA,GAAH,2GAMRI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,oJAQJM,EAAMN,EAAAA,GAAAA,IAAH,2J,SC4BhB,EA/De,WAAO,IAAD,EAEnB,GAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAC1CC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACY,KAAhBJ,GACFK,MAAM,qDAAD,OAVK,mCAUL,iCACkFL,EADlF,yBAGFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,YAAkB,IAAfG,EAAc,EAAdA,QACPb,EAAUa,EACX,GAEN,GAAE,CAACT,KAUF,4BACE,SAACd,EAAD,CAAMwB,aAAa,MAAMC,SAN7B,SAAsBC,GACpBA,EAAEC,gBAEH,EAGG,UACE,SAACzB,EAAD,CACE0B,MAAOd,EACPe,YAAY,eACZC,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAN,GAAC,OAhBQK,EAgBcL,EAAEO,OAAOL,WAdhDf,EAD4B,KAATkB,EAAc,CAAEA,KAAAA,GAAS,CAAC,GAD/C,IAA2BA,CAgBR,MAIdtB,IACC,0BACE,SAACN,EAAD,UACGM,EAAOyB,KAAI,SAAAC,GACV,OACE,SAAC/B,EAAD,WACE,UAACC,EAAD,CAAM+B,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAhD,WACE,SAACT,EAAD,CACEiC,IAAG,iBAAKL,QAAL,IAAKA,OAAL,EAAKA,EAAOM,OACfC,IAAG,qEAAyDP,QAAzD,IAAyDA,OAAzD,EAAyDA,EAAOQ,eAEpER,EAAMM,UANIN,EAAME,GAUxB,QAIa,KAAb,OAAN5B,QAAM,IAANA,OAAA,EAAAA,EAAQmC,UACP,mEAA2C9B,EAA3C,SAIP,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  position: absolute;\n  top: -40px;\n  left: 55%;\n  margin-top: 58px;\n`;\nexport const Input = styled.input`\n  font-size: 20px;\n  outline: none;\n  border: 2px solid #5a5a5a;\n  border-radius: 5px;\n  :focus {\n    border: 2px solid gray;\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: -15px;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  margin: 30px;\n`;\nexport const Link = styled(NavLink)`\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n`;\nexport const Img = styled.img`\n  display: block;\n  width: 200px;\n  height: 300px;\n  margin-bottom: 10px;\n  box-shadow: 1px 3px 20px 6px rgba(0, 0, 0, 0.75);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { List, ListItem, Form, Input, Link, Img } from './Movies.styled';\nconst API_KEY = 'c2cddca1d76ae825076ff4418ab72190';\nconst Movies = () => {\n  //const [value, setValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const valueParams = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (valueParams !== '') {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${valueParams}&include_adult=false`\n      )\n        .then(res => res.json())\n        .then(({ results }) => {\n          setMovies(results);\n        });\n    }\n  }, [valueParams]);\n  function updateQueryString(name) {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    //setValue(e.target.elements.input.value.trim());\n  }\n  return (\n    <div>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Input\n          value={valueParams}\n          placeholder=\"Search movie\"\n          type=\"text\"\n          name=\"input\"\n          onChange={e => updateQueryString(e.target.value)}\n        />\n        {/*<button type=\"submit\">Search</button>*/}\n      </Form>\n      {movies && (\n        <div>\n          <List>\n            {movies.map(movie => {\n              return (\n                <ListItem key={movie.id}>\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    <Img\n                      alt={`${movie?.title}`}\n                      src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${movie?.poster_path}`}\n                    />\n                    {movie.title}\n                  </Link>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      )}\n      {movies?.length === 0 && (\n        <h3>No results founded by search request \"{valueParams}\"</h3>\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["Form","styled","Input","List","ListItem","Link","NavLink","Img","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","valueParams","get","location","useLocation","useEffect","fetch","then","res","json","results","autoComplete","onSubmit","e","preventDefault","value","placeholder","type","name","onChange","target","map","movie","to","id","state","from","alt","title","src","poster_path","length"],"sourceRoot":""}