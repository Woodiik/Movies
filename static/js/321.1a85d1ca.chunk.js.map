{"version":3,"file":"static/js/321.1a85d1ca.chunk.js","mappings":"2PAGaA,EAAOC,EAAAA,GAAAA,KAAH,iGAMJC,EAAQD,EAAAA,GAAAA,MAAH,+JASLE,EAASF,EAAAA,GAAAA,OAAH,qRAeNG,EAAOH,EAAAA,GAAAA,GAAH,iIAOJI,EAAWJ,EAAAA,GAAAA,GAAH,2GAMRK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,0KASJO,EAAQP,EAAAA,GAAAA,IAAH,6CAGLQ,EAAMR,EAAAA,GAAAA,IAAH,wH,SCkChB,EA/Ee,WAAO,IAAD,EACnB,GAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAC1CC,GAAWC,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WACY,KAAhBJ,GACJK,MAAM,qDAAD,OAVO,mCAUP,iCACkFL,EADlF,yBAGFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,YAAkB,IAAfG,EAAc,EAAdA,QACPb,EAAUa,EACX,GACJ,GAAE,CAAChB,EAAOO,KAYT,4BACE,UAAClB,EAAD,CAAM4B,aAAa,MAAMC,SAR7B,SAAsBC,GACpB,IALyBC,EAKjBpB,EAAUmB,EAAEE,OAAOC,SAASC,MAA5BvB,MACRmB,EAAEK,iBACFvB,EAASD,EAAMyB,QAPUL,EAQPpB,EAAMyB,OANxBnB,EAD4B,KAATc,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAQ9C,EAGG,WACE,SAAC7B,EAAD,CACEmC,aAAcnB,EACdoB,YAAY,eACZC,KAAK,OACLR,KAAK,WAEP,SAAC5B,EAAD,CAAQoC,KAAK,SAAb,uBAED1B,IACC,0BACE,SAACT,EAAD,UACGS,EAAO2B,KAAI,SAAAC,GACV,OACE,SAACpC,EAAD,WACE,SAACC,EAAD,CAAMoC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMzB,GAAhD,UACE,UAACZ,EAAD,WACGiC,EAAMK,cACL,SAACrC,EAAD,CACEsC,MAAM,MACNC,OAAO,MACPC,IAAG,iBAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAOS,OACfC,IAAG,8DAAyDV,EAAMK,gBAGpEL,EAAMK,cACN,SAACrC,EAAD,CACEsC,MAAM,MACNC,OAAO,MACPC,IAAG,iBAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAOS,OACfC,IACE,+FAIN,wBAAS,OAALV,QAAK,IAALA,OAAA,EAAAA,EAAOS,SAAP,OAAgBT,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOW,uBArBlBX,EAAME,GA0BxB,QAIa,KAAb,OAAN9B,QAAM,IAANA,OAAA,EAAAA,EAAQwC,UACP,mEAA2CnC,EAA3C,SAIP,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  position: absolute;\n  top: -40px;\n  left: 55%;\n  margin-top: 58px;\n`;\nexport const Input = styled.input`\n  font-size: 20px;\n  outline: none;\n  border: 2px solid #5a5a5a;\n  border-radius: 5px;\n  :focus {\n    border-color: purple;\n  }\n`;\nexport const Button = styled.button`\n  font-size: 20px;\n  color: purple;\n  cursor: pointer;\n  outline: none;\n  border: 2px solid #5a5a5a;\n  border-radius: 5px;\n  :hover {\n    border-color: purple;\n    background-color: gainsboro;\n  }\n  :active {\n    transform: scale(0.9);\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: -15px;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  max-width: 220px;\n  margin: 30px;\n`;\nexport const Link = styled(NavLink)`\n  display: block;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n  text-decoration: none;\n  color: inherit;\n`;\nexport const Thumb = styled.div`\n  max-width: 200px;\n`;\nexport const Img = styled.img`\n  display: block;\n  margin-bottom: 10px;\n  box-shadow: 1px 3px 20px 6px rgba(0, 0, 0, 0.75);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  Form,\n  Input,\n  Link,\n  Img,\n  Thumb,\n  Button,\n} from './Movies.styled';\nconst API_KEY = 'c2cddca1d76ae825076ff4418ab72190';\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const valueParams = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (valueParams === '') return;\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${valueParams}&include_adult=false`\n    )\n      .then(res => res.json())\n      .then(({ results }) => {\n        setMovies(results);\n      });\n  }, [value, valueParams]);\n  function updateQueryString(name) {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  }\n  function handleSubmit(e) {\n    const { value } = e.target.elements.input;\n    e.preventDefault();\n    setValue(value.trim());\n    updateQueryString(value.trim());\n  }\n  return (\n    <div>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Input\n          defaultValue={valueParams}\n          placeholder=\"Search movie\"\n          type=\"text\"\n          name=\"input\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies && (\n        <div>\n          <List>\n            {movies.map(movie => {\n              return (\n                <ListItem key={movie.id}>\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    <Thumb>\n                      {movie.poster_path && (\n                        <Img\n                          width=\"200\"\n                          height=\"300\"\n                          alt={`${movie?.title}`}\n                          src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`}\n                        />\n                      )}\n                      {!movie.poster_path && (\n                        <Img\n                          width=\"200\"\n                          height=\"300\"\n                          alt={`${movie?.title}`}\n                          src={\n                            'https://www.publicdomainpictures.net/pictures/260000/nahled/play-button-15282372642Gh.jpg'\n                          }\n                        />\n                      )}\n                      <p>{movie?.title || movie?.original_name}</p>\n                    </Thumb>\n                  </Link>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      )}\n      {movies?.length === 0 && (\n        <h3>No results founded by search request \"{valueParams}\"</h3>\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["Form","styled","Input","Button","List","ListItem","Link","NavLink","Thumb","Img","useState","value","setValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","valueParams","get","location","useLocation","useEffect","fetch","then","res","json","results","autoComplete","onSubmit","e","name","target","elements","input","preventDefault","trim","defaultValue","placeholder","type","map","movie","to","id","state","from","poster_path","width","height","alt","title","src","original_name","length"],"sourceRoot":""}